{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\nimport flatpickr from 'flatpickr';\n\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\n\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate.getTime() < Date.now()) {\n      button.disabled = true;\n      iziToast.error({\n        position: 'topRight',\n        messageColor: 'white',\n        backgroundColor: 'red',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nconst dateTimeInput = document.querySelector('#datetime-picker');\n\nflatpickr(dateTimeInput, options);\n\nconst button = document.querySelector('button');\nconst elSeconds = document.querySelector('span.value[data-seconds]');\nconst elMinutes = document.querySelector('span.value[data-minutes]');\nconst elHours = document.querySelector('span.value[data-hours]');\nconst elDays = document.querySelector('span.value[data-days]');\n\nlet userSelectedDate;\n\nbutton.disabled = true;\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  elSeconds.textContent = String(seconds).padStart(2, '0');\n  elMinutes.textContent = String(minutes).padStart(2, '0');\n  elHours.textContent = String(hours).padStart(2, '0');\n  elDays.textContent = String(days).padStart(2, '0');\n}\n\nfunction handleClick(event) {\n  dateTimeInput.disabled = true;\n  button.disabled = true;\n\n  const intervalId = setInterval(() => {\n    let diff = userSelectedDate - Date.now();\n\n    if (diff <= 0) {\n      dateTimeInput.disabled = false;\n      clearInterval(intervalId);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      return;\n    }\n\n    const timeLeft = convertMs(diff);\n\n    updateTimerDisplay(timeLeft);\n  }, 1000);\n}\n\nbutton.addEventListener('click', handleClick);\n"],"names":["options","selectedDates","userSelectedDate","button","iziToast","dateTimeInput","flatpickr","elSeconds","elMinutes","elHours","elDays","convertMs","ms","days","hours","minutes","seconds","updateTimerDisplay","handleClick","event","intervalId","diff","timeLeft"],"mappings":"2GAUA,MAAMA,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBC,EAAmBD,EAAc,CAAC,EAC9BC,EAAiB,QAAO,EAAK,KAAK,IAAG,GACvCC,EAAO,SAAW,GAClBC,EAAS,MAAM,CACb,SAAU,WACV,aAAc,QACd,gBAAiB,MACjB,QAAS,oCACjB,CAAO,GAEDD,EAAO,SAAW,EAErB,CACH,EAEME,EAAgB,SAAS,cAAc,kBAAkB,EAE/DC,EAAUD,EAAeL,CAAO,EAEhC,MAAMG,EAAS,SAAS,cAAc,QAAQ,EACxCI,EAAY,SAAS,cAAc,0BAA0B,EAC7DC,EAAY,SAAS,cAAc,0BAA0B,EAC7DC,EAAU,SAAS,cAAc,wBAAwB,EACzDC,EAAS,SAAS,cAAc,uBAAuB,EAE7D,IAAIR,EAEJC,EAAO,SAAW,GAElB,SAASQ,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAmB,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DT,EAAU,YAAc,OAAOS,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDR,EAAU,YAAc,OAAOO,CAAO,EAAE,SAAS,EAAG,GAAG,EACvDN,EAAQ,YAAc,OAAOK,CAAK,EAAE,SAAS,EAAG,GAAG,EACnDJ,EAAO,YAAc,OAAOG,CAAI,EAAE,SAAS,EAAG,GAAG,CACnD,CAEA,SAASK,EAAYC,EAAO,CAC1Bd,EAAc,SAAW,GACzBF,EAAO,SAAW,GAElB,MAAMiB,EAAa,YAAY,IAAM,CACnC,IAAIC,EAAOnB,EAAmB,KAAK,IAAG,EAEtC,GAAImB,GAAQ,EAAG,CACbhB,EAAc,SAAW,GACzB,cAAce,CAAU,EACxBH,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChE,MACD,CAED,MAAMK,EAAWX,EAAUU,CAAI,EAE/BJ,EAAmBK,CAAQ,CAC5B,EAAE,GAAI,CACT,CAEAnB,EAAO,iBAAiB,QAASe,CAAW"}